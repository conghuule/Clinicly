basePath: /api/v1
definitions:
  controllers.DashboardReport:
    properties:
      medicine_data:
        items:
          type: integer
        type: array
      new_medicine:
        type: integer
      new_patient:
        type: integer
      new_revenue:
        type: integer
      new_ticket:
        type: integer
      patient_data:
        items:
          type: integer
        type: array
      revenue_data:
        items:
          type: integer
        type: array
      ticket_data:
        items:
          type: integer
        type: array
      total_medicine:
        type: integer
      total_patient:
        type: integer
      total_revenue:
        type: integer
      total_ticket:
        type: integer
    type: object
  controllers.DashboardReportResponse:
    properties:
      data:
        $ref: '#/definitions/controllers.DashboardReport'
      message:
        type: string
      status:
        type: string
    type: object
  controllers.InvoiceListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Invoice'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  controllers.InvoiceResponse:
    properties:
      data:
        $ref: '#/definitions/models.Invoice'
      message:
        type: string
      status:
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.LoginResponse:
    properties:
      data:
        $ref: '#/definitions/models.User'
      message:
        type: string
      status:
        type: string
    type: object
  controllers.MedicalReportListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.MedicalReport'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  controllers.MedicalReportRequest:
    properties:
      diagnose:
        type: string
      doctor:
        type: integer
      patient:
        type: integer
      prescription:
        items:
          $ref: '#/definitions/controllers.PrescriptionRequest'
        type: array
    required:
    - doctor
    - patient
    type: object
  controllers.MedicalReportResponse:
    properties:
      data:
        $ref: '#/definitions/models.MedicalReport'
      message:
        type: string
      status:
        type: string
    type: object
  controllers.MedicineListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Medicine'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  controllers.MedicineReportListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.MedicineReport'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  controllers.MedicineReportRequest:
    properties:
      date:
        example: "2002-02-28"
        type: string
      medicine_id:
        type: string
      quantity:
        type: integer
    required:
    - medicine_id
    - quantity
    type: object
  controllers.MedicineReportResponse:
    properties:
      data:
        $ref: '#/definitions/models.MedicineReport'
      message:
        type: string
      status:
        type: string
    type: object
  controllers.MedicineRequest:
    properties:
      id:
        type: string
      info:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      unit:
        $ref: '#/definitions/types.MedicineUnit'
    required:
    - id
    - name
    - price
    - quantity
    - unit
    type: object
  controllers.MedicineResponse:
    properties:
      data:
        $ref: '#/definitions/models.Medicine'
      message:
        type: string
      status:
        type: string
    type: object
  controllers.PatientListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Patient'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  controllers.PatientRequest:
    properties:
      address:
        type: string
      birth_date:
        example: "2002-02-28"
        type: string
      full_name:
        type: string
      gender:
        $ref: '#/definitions/types.Gender'
      identity_card:
        type: string
      phone_number:
        type: string
    required:
    - address
    - birth_date
    - full_name
    - gender
    - identity_card
    - phone_number
    type: object
  controllers.PatientResponse:
    properties:
      data:
        $ref: '#/definitions/models.Patient'
      message:
        type: string
      status:
        type: string
    type: object
  controllers.PrescriptionRequest:
    properties:
      instruction:
        type: string
      medicine:
        type: string
      quantity:
        type: integer
    required:
    - instruction
    - medicine
    - quantity
    type: object
  controllers.RegulationListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Regulation'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  controllers.RegulationRequest:
    properties:
      id:
        type: string
      name:
        type: string
      value:
        type: integer
    required:
    - id
    - name
    - value
    type: object
  controllers.RegulationResponse:
    properties:
      data:
        $ref: '#/definitions/models.Regulation'
      message:
        type: string
      status:
        type: string
    type: object
  controllers.StaffListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Staff'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  controllers.StaffRequest:
    properties:
      address:
        type: string
      birth_date:
        example: "2002-02-28"
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        $ref: '#/definitions/types.Gender'
      identity_card:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        $ref: '#/definitions/types.Role'
      salary:
        type: integer
      status:
        $ref: '#/definitions/types.StaffStatus'
    required:
    - address
    - birth_date
    - email
    - full_name
    - gender
    - identity_card
    - password
    - phone_number
    - role
    type: object
  controllers.StaffResponse:
    properties:
      data:
        $ref: '#/definitions/models.Staff'
      message:
        type: string
      status:
        type: string
    type: object
  controllers.TicketListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Ticket'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  controllers.TicketRequest:
    properties:
      patient_id:
        type: integer
    required:
    - patient_id
    type: object
  controllers.TicketResponse:
    properties:
      data:
        $ref: '#/definitions/models.Ticket'
      message:
        type: string
      status:
        type: string
    type: object
  controllers.UpdateInvoiceRequest:
    properties:
      delivery_status:
        type: boolean
      payment_status:
        type: boolean
    type: object
  controllers.UpdateMedicalReportRequest:
    properties:
      date:
        type: string
      diagnose:
        type: string
      doctor:
        type: integer
      patient:
        type: integer
      prescription:
        items:
          $ref: '#/definitions/controllers.PrescriptionRequest'
        type: array
    type: object
  controllers.UpdateMedicineReportRequest:
    properties:
      date:
        example: "2002-02-28"
        type: string
      medicine_id:
        type: string
      quantity:
        type: integer
    type: object
  controllers.UpdateMedicineRequest:
    properties:
      id:
        type: string
      info:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      unit:
        $ref: '#/definitions/types.MedicineUnit'
    type: object
  controllers.UpdatePatientRequest:
    properties:
      address:
        type: string
      birth_date:
        example: "2002-02-28"
        type: string
      full_name:
        type: string
      gender:
        $ref: '#/definitions/types.Gender'
      identity_card:
        type: string
      phone_number:
        type: string
    type: object
  controllers.UpdateRegulationRequest:
    properties:
      id:
        type: string
      name:
        type: string
      value:
        type: integer
    type: object
  controllers.UpdateStaffRequest:
    properties:
      address:
        type: string
      birth_date:
        example: "2002-02-28"
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        $ref: '#/definitions/types.Gender'
      identity_card:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        $ref: '#/definitions/types.Role'
      salary:
        type: integer
      status:
        $ref: '#/definitions/types.StaffStatus'
    type: object
  controllers.UpdateTicketRequest:
    properties:
      status:
        $ref: '#/definitions/types.TicketStatus'
    required:
    - status
    type: object
  models.Invoice:
    properties:
      created_at:
        type: string
      delivery_status:
        type: boolean
      id:
        type: integer
      medical_report:
        $ref: '#/definitions/models.MedicalReport'
      medical_report_id:
        type: integer
      payment_status:
        type: boolean
      total:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  models.MedicalReport:
    properties:
      created_at:
        type: string
      date:
        type: string
      diagnose:
        type: string
      doctor:
        $ref: '#/definitions/models.Staff'
      doctor_id:
        type: integer
      id:
        type: integer
      patient_id:
        type: integer
      prescription:
        items:
          $ref: '#/definitions/models.Prescription'
        type: array
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  models.Medicine:
    properties:
      created_at:
        type: string
      id:
        type: string
      info:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      unit:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  models.MedicineReport:
    properties:
      created_at:
        type: string
      date:
        type: string
      id:
        type: integer
      medicine:
        $ref: '#/definitions/models.Medicine'
      medicine_id:
        type: string
      quantity:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  models.Patient:
    properties:
      address:
        type: string
      birth_date:
        type: string
      created_at:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      identity_card:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  models.Prescription:
    properties:
      created_at:
        type: string
      instruction:
        type: string
      medical_report_id:
        type: integer
      medicine_id:
        type: string
      quantity:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  models.Regulation:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
      value:
        type: integer
    type: object
  models.Staff:
    properties:
      address:
        type: string
      birth_date:
        type: string
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      identity_card:
        type: string
      phone_number:
        type: string
      role:
        type: string
      salary:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  models.Ticket:
    properties:
      created_at:
        type: string
      date:
        type: string
      id:
        type: integer
      number:
        type: integer
      patient:
        $ref: '#/definitions/models.Patient'
      patient_id:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      role:
        type: string
    type: object
  types.Gender:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Male
    - Female
    - Other
  types.MedicineUnit:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Pill
    - Bottle
  types.Role:
    enum:
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - Receptionist
    - Doctor
    - Pharmacist
    - Admin
  types.StaffStatus:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Working
    - Quit
  types.TicketStatus:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Waiting
    - Processing
    - Done
host: localhost:8080
info:
  contact: {}
  description: Clinic Management API
  title: Clinic Management
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login your account
      parameters:
      - description: Login data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login response
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
      summary: Login
      tags:
      - auth
  /dashboard:
    get:
      description: Get dashboard
      parameters:
      - description: Start date
        example: "2002-02-20"
        in: query
        name: start_date
        required: true
        type: string
      - description: End date
        example: "2002-02-28"
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dashboard response
          schema:
            $ref: '#/definitions/controllers.DashboardReportResponse'
      summary: Get dashboard
      tags:
      - dashboard
  /invoice:
    get:
      description: Get invoice
      parameters:
      - description: Patient
        in: query
        name: patient
        type: integer
      - description: Payment status
        in: query
        name: payment_status
        type: boolean
      - description: Delivery status
        in: query
        name: delivery_status
        type: boolean
      - description: Date
        in: query
        name: date
        type: string
      - description: Order by
        in: query
        name: order_by
        type: integer
      - default: false
        description: Order descending
        in: query
        name: desc
        type: boolean
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Invoice response
          schema:
            $ref: '#/definitions/controllers.InvoiceListResponse'
      summary: Get invoice
      tags:
      - invoice
  /invoice/{id}:
    delete:
      description: Delete invoice
      parameters:
      - description: Invoice id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Invoice response
          schema:
            $ref: '#/definitions/controllers.InvoiceResponse'
      summary: Delete invoice
      tags:
      - invoice
    get:
      description: Get invoice by id
      parameters:
      - description: Invoice id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Invoice response
          schema:
            $ref: '#/definitions/controllers.InvoiceResponse'
      summary: Get invoice by id
      tags:
      - invoice
    put:
      consumes:
      - application/json
      description: Update invoice
      parameters:
      - description: Invoice id
        in: path
        name: id
        required: true
        type: integer
      - description: Invoice data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateInvoiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Invoice response
          schema:
            $ref: '#/definitions/controllers.InvoiceResponse'
      summary: Update invoice
      tags:
      - invoice
  /medical-report:
    get:
      description: Get medical report
      parameters:
      - description: Patient
        in: query
        name: patient
        type: string
      - description: Date
        in: query
        name: date
        type: string
      - description: Order by
        in: query
        name: order_by
        type: integer
      - default: false
        description: Order descending
        in: query
        name: desc
        type: boolean
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Medical report response
          schema:
            $ref: '#/definitions/controllers.MedicalReportListResponse'
      summary: Get medical report
      tags:
      - medical report
    post:
      consumes:
      - application/json
      description: Create medical report
      parameters:
      - description: Medical report data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.MedicalReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Medical report response
          schema:
            $ref: '#/definitions/controllers.MedicalReportResponse'
      summary: Create medical report
      tags:
      - medical report
  /medical-report/{id}:
    delete:
      description: Delete medical report
      parameters:
      - description: Medical report id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Medical report response
          schema:
            $ref: '#/definitions/controllers.MedicalReportResponse'
      summary: Delete medical report
      tags:
      - medical report
    get:
      description: Get medical report by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Medical report response
          schema:
            $ref: '#/definitions/controllers.MedicalReportResponse'
      summary: Get medical report by id
      tags:
      - medical report
    put:
      consumes:
      - application/json
      description: Update medical report
      parameters:
      - description: Medical report id
        in: path
        name: id
        required: true
        type: integer
      - description: Medical report data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateMedicalReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Medical report response
          schema:
            $ref: '#/definitions/controllers.MedicalReportResponse'
      summary: Update medical report
      tags:
      - medical report
  /medicine:
    get:
      description: Get medicine
      parameters:
      - description: Medicine id
        in: query
        name: id
        type: string
      - description: Medicine name
        in: query
        name: name
        type: string
      - description: Order by
        in: query
        name: order_by
        type: integer
      - default: false
        description: Order descending
        in: query
        name: desc
        type: boolean
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Medicine response
          schema:
            $ref: '#/definitions/controllers.MedicineListResponse'
      summary: Get medicine
      tags:
      - medicine
    post:
      consumes:
      - application/json
      description: Create medicine
      parameters:
      - description: Medicine data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.MedicineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Medicine response
          schema:
            $ref: '#/definitions/controllers.MedicineResponse'
      summary: Create medicine
      tags:
      - medicine
  /medicine-report:
    get:
      description: Get medicine report
      parameters:
      - description: Date
        in: query
        name: date
        type: string
      - description: Order by
        in: query
        name: order_by
        type: integer
      - default: false
        description: Order descending
        in: query
        name: desc
        type: boolean
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Medicine report response
          schema:
            $ref: '#/definitions/controllers.MedicineReportListResponse'
      summary: Get medicine report
      tags:
      - medicine report
    post:
      consumes:
      - application/json
      description: Create medicine report
      parameters:
      - description: Medicine report data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.MedicineReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Medicine report response
          schema:
            $ref: '#/definitions/controllers.MedicineReportResponse'
      summary: Create medicine report
      tags:
      - medicine report
  /medicine-report/{id}:
    delete:
      description: Delete medicine report
      parameters:
      - description: Medicine report id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Medicine report response
          schema:
            $ref: '#/definitions/controllers.MedicineReportResponse'
      summary: Delete medicine report
      tags:
      - medicine report
    get:
      description: Get medicine report by id
      parameters:
      - description: Medicine report id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Medicine report response
          schema:
            $ref: '#/definitions/controllers.MedicineReportResponse'
      summary: Get medicine report by id
      tags:
      - medicine report
    put:
      consumes:
      - application/json
      description: Update medicine report
      parameters:
      - description: Medicine report id
        in: path
        name: id
        required: true
        type: string
      - description: Medicine report data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateMedicineReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Medicine report response
          schema:
            $ref: '#/definitions/controllers.MedicineReportResponse'
      summary: Update medicine report
      tags:
      - medicine report
  /medicine/{id}:
    delete:
      description: Delete medicine
      parameters:
      - description: Medicine id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Medicine response
          schema:
            $ref: '#/definitions/controllers.MedicineResponse'
      summary: Delete medicine
      tags:
      - medicine
    get:
      description: Get medicine by id
      parameters:
      - description: Medicine id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Medicine response
          schema:
            $ref: '#/definitions/controllers.MedicineResponse'
      summary: Get medicine by id
      tags:
      - medicine
    put:
      consumes:
      - application/json
      description: Update medicine
      parameters:
      - description: Medicine id
        in: path
        name: id
        required: true
        type: string
      - description: Medicine data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateMedicineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Medicine response
          schema:
            $ref: '#/definitions/controllers.MedicineResponse'
      summary: Update medicine
      tags:
      - medicine
  /medicine/enums:
    get:
      description: Get medicine enums
      produces:
      - application/json
      responses: {}
      summary: Get medicine enums
      tags:
      - medicine
  /patient:
    get:
      description: Get patient
      parameters:
      - description: Patient name
        in: query
        name: name
        type: string
      - description: Order by
        in: query
        name: order_by
        type: integer
      - default: false
        description: Order descending
        in: query
        name: desc
        type: boolean
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Patient response
          schema:
            $ref: '#/definitions/controllers.PatientListResponse'
      summary: Get patient
      tags:
      - patient
    post:
      consumes:
      - application/json
      description: Create patient
      parameters:
      - description: Patient data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.PatientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Patient response
          schema:
            $ref: '#/definitions/controllers.PatientResponse'
      summary: Create patient
      tags:
      - patient
  /patient/{id}:
    delete:
      description: Delete patient
      parameters:
      - description: Patient id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Patient response
          schema:
            $ref: '#/definitions/controllers.PatientResponse'
      summary: Delete patient
      tags:
      - patient
    get:
      description: Get patient by id
      parameters:
      - description: Patient id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Patient response
          schema:
            $ref: '#/definitions/controllers.PatientResponse'
      summary: Get patient by id
      tags:
      - patient
    put:
      consumes:
      - application/json
      description: Update patient
      parameters:
      - description: Patient id
        in: path
        name: id
        required: true
        type: integer
      - description: Patient data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdatePatientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Patient response
          schema:
            $ref: '#/definitions/controllers.PatientResponse'
      summary: Update patient
      tags:
      - patient
  /patient/enums:
    get:
      description: Get patient enums
      produces:
      - application/json
      responses: {}
      summary: Get patient enums
      tags:
      - patient
  /regulation:
    get:
      description: Get regulation
      parameters:
      - description: Regulation id
        in: query
        name: id
        type: string
      - description: Regulation name
        in: query
        name: name
        type: string
      - description: Order by
        in: query
        name: order_by
        type: integer
      - default: false
        description: Order descending
        in: query
        name: desc
        type: boolean
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Regulation response
          schema:
            $ref: '#/definitions/controllers.RegulationListResponse'
      summary: Get regulation
      tags:
      - regulation
    post:
      consumes:
      - application/json
      description: Create regulation
      parameters:
      - description: Regulation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.RegulationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Regulation response
          schema:
            $ref: '#/definitions/controllers.RegulationResponse'
      summary: Create regulation
      tags:
      - regulation
  /regulation/{id}:
    delete:
      description: Delete regulation
      parameters:
      - description: Regulation id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Regulation response
          schema:
            $ref: '#/definitions/controllers.RegulationResponse'
      summary: Delete regulation
      tags:
      - regulation
    put:
      consumes:
      - application/json
      description: Update regulation
      parameters:
      - description: Regulation id
        in: path
        name: id
        required: true
        type: string
      - description: Regulation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateRegulationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Regulation response
          schema:
            $ref: '#/definitions/controllers.RegulationResponse'
      summary: Update regulation
      tags:
      - regulation
  /staff:
    get:
      description: Get staff
      parameters:
      - description: Staff name
        in: query
        name: name
        type: string
      - description: Staff status
        enum:
        - 1
        - 2
        in: query
        name: status
        type: integer
      - description: Staff role
        enum:
        - 1
        - 2
        - 3
        - 4
        in: query
        name: role
        type: integer
      - description: Order by
        in: query
        name: order_by
        type: integer
      - default: false
        description: Order descending
        in: query
        name: desc
        type: boolean
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Staff response
          schema:
            $ref: '#/definitions/controllers.StaffListResponse'
      summary: Get staff
      tags:
      - staff
    post:
      consumes:
      - application/json
      description: Create staff
      parameters:
      - description: Staff data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.StaffRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Staff response
          schema:
            $ref: '#/definitions/controllers.StaffResponse'
      summary: Create staff
      tags:
      - staff
  /staff/{id}:
    delete:
      description: Delete staff
      parameters:
      - description: Staff id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Staff response
          schema:
            $ref: '#/definitions/controllers.StaffResponse'
      summary: Delete staff
      tags:
      - staff
    get:
      description: Get staff by id
      parameters:
      - description: Staff id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Staff response
          schema:
            $ref: '#/definitions/controllers.StaffResponse'
      summary: Get staff by id
      tags:
      - staff
    put:
      consumes:
      - application/json
      description: Update staff
      parameters:
      - description: Staff id
        in: path
        name: id
        required: true
        type: integer
      - description: Staff data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateStaffRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Staff response
          schema:
            $ref: '#/definitions/controllers.StaffResponse'
      summary: Update staff
      tags:
      - staff
  /staff/enums:
    get:
      description: Get staff enums
      produces:
      - application/json
      responses: {}
      summary: Get staff enums
      tags:
      - staff
  /ticket:
    get:
      description: Get ticket
      parameters:
      - description: Ticket status
        enum:
        - 1
        - 2
        - 3
        in: query
        name: status
        type: integer
      - description: Date
        in: query
        name: date
        type: string
      - description: Order by
        in: query
        name: order_by
        type: integer
      - default: false
        description: Order descending
        in: query
        name: desc
        type: boolean
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ticket response
          schema:
            $ref: '#/definitions/controllers.TicketListResponse'
      summary: Get ticket
      tags:
      - ticket
    post:
      consumes:
      - application/json
      description: Create ticket
      parameters:
      - description: Ticket data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.TicketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ticket response
          schema:
            $ref: '#/definitions/controllers.TicketResponse'
      summary: Create ticket
      tags:
      - ticket
  /ticket/{id}:
    delete:
      description: Delete ticket
      parameters:
      - description: Ticket id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ticket response
          schema:
            $ref: '#/definitions/controllers.TicketResponse'
      summary: Delete ticket
      tags:
      - ticket
    put:
      consumes:
      - application/json
      description: Update ticket
      parameters:
      - description: Ticket id
        in: path
        name: id
        required: true
        type: integer
      - description: Ticket data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateTicketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ticket response
          schema:
            $ref: '#/definitions/controllers.TicketResponse'
      summary: Update ticket
      tags:
      - ticket
  /ticket/enums:
    get:
      description: Get ticket enums
      produces:
      - application/json
      responses: {}
      summary: Get ticket enums
      tags:
      - ticket
schemes:
- http
- https
swagger: "2.0"
